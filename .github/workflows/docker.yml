name: docker

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]

permissions:
  contents: write

jobs:
  build-docker:
    name: Build Docker images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Collect Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ vars.DOCKERHUB_USERNAME }}/sandhole
          tags: |
            type=ref,event=branch
            type=sha,prefix=,suffix=,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PUSH_TOKEN  }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile.ci
          push: true
          platforms: |
            linux/amd64
            linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Export binaries
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile.ci
          target: binary
          outputs: type=local,dest=out
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sandhole-binaries
          path: out/
  create-release-draft:
    name: Create release draft
    if: github.ref_type == 'tag'
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: sandhole-binaries
          path: out/
      - name: Create release draft with binary assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create ${{ github.ref_name }} ./out/* --draft

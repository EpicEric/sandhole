name: Validate

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

env:
  RUST_MSRV: 1.88.0
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_TEST_DEBUG: 0

jobs:
  rustfmt-msrv:
    name: Check rustfmt formatting on MSRV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Fetch MSRV
        run: |
          rustup toolchain install ${RUST_MSRV}-x86_64-unknown-linux-gnu
          rustup override set ${RUST_MSRV}-x86_64-unknown-linux-gnu
      - name: Run rustfmt
        run: |
          rustup component add rustfmt
          cargo fmt --check --all
  clippy-msrv:
    name: Check Clippy lints on MSRV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Fetch MSRV
        run: |
          rustup toolchain install ${RUST_MSRV}-x86_64-unknown-linux-gnu
          rustup override set ${RUST_MSRV}-x86_64-unknown-linux-gnu
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
      - name: Run Clippy
        run: |
          rustup component add clippy
          cargo clippy --all-targets -- -D warnings
  build-msrv-default-features:
    name: Build on MSRV (default features)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Fetch MSRV
        run: |
          rustup toolchain install ${RUST_MSRV}-x86_64-unknown-linux-gnu
          rustup override set ${RUST_MSRV}-x86_64-unknown-linux-gnu
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
      - name: Build
        run: |
          cargo build --locked
  build-msrv-no-default-features:
    name: Build on MSRV (no default features)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Fetch MSRV
        run: |
          rustup toolchain install ${RUST_MSRV}-x86_64-unknown-linux-gnu
          rustup override set ${RUST_MSRV}-x86_64-unknown-linux-gnu
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
      - name: Build
        run: |
          cargo build --locked --no-default-features
  tests-nightly:
    name: Run tests on nightly
    runs-on: ubuntu-latest
    env:
      CARGO_LLVM_COV_VERSION: 0.6.20
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Install cargo-llvm-cov
        run: |
          wget https://github.com/taiki-e/cargo-llvm-cov/releases/download/v${CARGO_LLVM_COV_VERSION}/cargo-llvm-cov-x86_64-unknown-linux-gnu.tar.gz \
            -O /tmp/cargo-llvm-cov.tar.gz
          tar -xvzf /tmp/cargo-llvm-cov.tar.gz -C ${HOME}/.cargo/bin
      - name: Fetch nightly Rust
        run: |
          rustup toolchain install nightly-x86_64-unknown-linux-gnu
          rustup override set nightly-x86_64-unknown-linux-gnu
      - name: Test
        env:
          RUSTFLAGS: -A dead_code -A unused_variables
        run: |
          cargo llvm-cov --verbose --codecov --locked --output-path codecov.json
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: ./codecov.json
          token: ${{ secrets.CODECOV_TOKEN }}
  build-main:
    name: Build on main
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    needs:
      - rustfmt-msrv
      - clippy-msrv
      - build-msrv-default-features
      - build-msrv-no-default-features
      - tests-nightly
    uses: ./.github/workflows/build.yml
    secrets:
      dockerhub-push-token: ${{ secrets.DOCKERHUB_PUSH_TOKEN  }}
      ghcr-push-token: ${{ secrets.GITHUB_TOKEN }}
